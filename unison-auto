#!/usr/bin/perl

# use this to run updates

# options --text (auto) --ui (prompts)

use strict;
use warnings;

# change this if you need to
my $config="$ENV{HOME}/.config/unison-auto.conf";

# set defaults
our $how_often=2;
our @profiles=();

# what are we to do?
die "Usage: $0 [--text | --gui]" if ( $#ARGV != 0 );
my $action;
if ( $ARGV[0] eq "--text" ) {
	$action="text";
}
elsif ( $ARGV[0] eq "--gui" ) {
	$action="gui";
}
else {
	die "Usage: $0 [--text | --gui]";
}


# only one instance of this program
use Fcntl qw(:flock);
unless (flock(DATA, LOCK_EX|LOCK_NB)) {
    print "$0 is already running. Exiting.\n";
    exit(1);
}

# load config
if ( not -f $config ) {
    die "failed to find config $config";
}
unless ( my $config_return = do $config ) {
    die "couldn't parse $config: $@" if $@;
    die "couldn't do $config: $!" unless defined $config_return;
    die "couldn't run $config" unless $config_return;
    # die "other error"; # not needed
}

# main, check every hour
foreach my $profile (@profiles) {
	
	if ( $action eq "text" ) {
		system("unison-2.40 \"$profile\" -auto -batch -ui text > /dev/null 2>&1");
		# check for exit status
		if ( $? >> 8 != 0 ) {
			# email errors
			if ( not open(MAIL, " | mail -s \"Unison - $profile\" $ENV{USER}" ) ) {
				print "Error: could not sent mail!\n";
				next;
			}
			print MAIL "$profile did not finish syncing\n\n";
			if ( -f "$ENV{HOME}/unison.log" ) {
				print MAIL "Unison log output:\n\n";
				my @tail = `tail -n 15 "$ENV{HOME}/unison.log"`;
				# no need for chomp
				print MAIL @tail;
			}
			close(MAIL); # send it
			# old method:
			# system("echo $profile did not finish syncing | mail -s \"Unison - $profile\" $ENV{USER}");
		}
	}
	else {
		system("unison-2.40",$profile);
	}
}

# release lock
__DATA__
